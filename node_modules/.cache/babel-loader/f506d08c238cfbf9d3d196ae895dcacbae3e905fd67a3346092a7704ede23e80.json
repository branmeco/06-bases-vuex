{"ast":null,"code":"import getRandomInt from '@/helpers/getRandomInt';\nimport state from './state';\nconst counterStore = {\n  //TODO: falta algo\n  namespaced: true,\n  state,\n  mutations: {\n    increment(state) {\n      state.count++;\n      state.lastMutation = 'increment';\n    },\n    incrementBy(state, val) {\n      state.count += val;\n      state.lastMutation = 'incrementBy: ' + val;\n      state.lastRandomInt = val;\n    },\n    setLoading(state, val) {\n      state.isLoading = val;\n      state.lastMutation = 'setLoading: ' + val;\n    }\n  },\n  actions: {\n    async incrementRandomInt({\n      commit\n    }) {\n      commit('setLoading', true);\n      const randomInt = await getRandomInt();\n      commit('incrementBy', randomInt);\n      commit('setLoading', false);\n    }\n  },\n  getters: {\n    squareCount(state) {\n      return state.count * state.count;\n    }\n  }\n};\nexport default counterStore;","map":{"version":3,"names":["getRandomInt","state","counterStore","namespaced","mutations","increment","count","lastMutation","incrementBy","val","lastRandomInt","setLoading","isLoading","actions","incrementRandomInt","commit","randomInt","getters","squareCount"],"sources":["/home/hibouzdev/Documents/curso-vue/06-bases-vuex/src/store/counter/index.js"],"sourcesContent":["import getRandomInt from '@/helpers/getRandomInt'\n\nimport state from './state'\n\nconst counterStore = {\n    //TODO: falta algo\n    namespaced: true,\n    state,\n\n    mutations: {\n        increment(state) {\n            state.count++\n            state.lastMutation = 'increment'\n        },\n        incrementBy(state, val) {\n            state.count += val\n            state.lastMutation = 'incrementBy: ' + val\n            state.lastRandomInt = val\n        },\n        setLoading(state, val) {\n            state.isLoading = val\n            state.lastMutation = 'setLoading: ' + val\n        }\n    },\n\n    actions: {\n        async incrementRandomInt({ commit }) {\n\n            commit('setLoading', true)\n            const randomInt = await getRandomInt()\n\n            commit('incrementBy', randomInt)\n            commit('setLoading', false)\n        }\n    },\n\n    getters: {\n        squareCount(state) {\n            return state.count * state.count\n        }\n    }\n}\n\nexport default counterStore"],"mappings":"AAAA,OAAOA,YAAY,MAAM,wBAAwB;AAEjD,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,YAAY,GAAG;EACjB;EACAC,UAAU,EAAE,IAAI;EAChBF,KAAK;EAELG,SAAS,EAAE;IACPC,SAASA,CAACJ,KAAK,EAAE;MACbA,KAAK,CAACK,KAAK,EAAE;MACbL,KAAK,CAACM,YAAY,GAAG,WAAW;IACpC,CAAC;IACDC,WAAWA,CAACP,KAAK,EAAEQ,GAAG,EAAE;MACpBR,KAAK,CAACK,KAAK,IAAIG,GAAG;MAClBR,KAAK,CAACM,YAAY,GAAG,eAAe,GAAGE,GAAG;MAC1CR,KAAK,CAACS,aAAa,GAAGD,GAAG;IAC7B,CAAC;IACDE,UAAUA,CAACV,KAAK,EAAEQ,GAAG,EAAE;MACnBR,KAAK,CAACW,SAAS,GAAGH,GAAG;MACrBR,KAAK,CAACM,YAAY,GAAG,cAAc,GAAGE,GAAG;IAC7C;EACJ,CAAC;EAEDI,OAAO,EAAE;IACL,MAAMC,kBAAkBA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAEjCA,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC;MAC1B,MAAMC,SAAS,GAAG,MAAMhB,YAAY,CAAC,CAAC;MAEtCe,MAAM,CAAC,aAAa,EAAEC,SAAS,CAAC;MAChCD,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC;IAC/B;EACJ,CAAC;EAEDE,OAAO,EAAE;IACLC,WAAWA,CAACjB,KAAK,EAAE;MACf,OAAOA,KAAK,CAACK,KAAK,GAAGL,KAAK,CAACK,KAAK;IACpC;EACJ;AACJ,CAAC;AAED,eAAeJ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}