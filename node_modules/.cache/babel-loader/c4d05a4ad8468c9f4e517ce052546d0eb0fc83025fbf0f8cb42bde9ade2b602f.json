{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Counter - Vuex\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Random\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"mapState\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"h2\", null, \"Direct access: \" + _toDisplayString(_ctx.$store.state.count), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"Computed: \" + _toDisplayString($options.countComputed), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.increment && $options.increment(...args))\n  }, \"+1\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.incrementBy && $options.incrementBy(...args))\n  }, \"+5\"), _hoisted_2, _hoisted_3, _createElementVNode(\"h2\", null, \"mapState: \" + _toDisplayString(_ctx.count), 1 /* TEXT */), _hoisted_4], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_toDisplayString","_ctx","$store","state","count","$options","countComputed","onClick","_cache","args","increment","incrementBy","_hoisted_2","_hoisted_3","_hoisted_4"],"sources":["/home/hibouzdev/Documents/curso-vue/06-bases-vuex/src/components/Counter.vue"],"sourcesContent":["<template>\n    <h1>Counter - Vuex</h1>\n    <h2>Direct access: {{ $store.state.count }}</h2>\n    <h2>Computed: {{ countComputed }}</h2>\n\n    <button @click=\"increment\">+1</button>\n    <button @click=\"incrementBy\">+5</button>\n    <button>Random</button>\n\n    <h1>mapState</h1>\n    <h2>mapState: {{ count }}</h2>\n    <h2></h2>\n</template>\n\n<script>\n\nimport { mapState } from 'vuex'\n\nexport default {\n    computed: {\n        countComputed() {\n            return this.$store.state.count\n        },\n        ...mapState(['count', 'lastMutation'])\n        // ...mapState[{\n        //     count: state => state.count,\n        //     lastMutation:  state => state.lastMutation\n        // }]\n    },\n\n    methods: {\n        increment(state) {\n            this.$store.commit('increment')\n        },\n        incrementBy() {\n            this.$store.commit('incrementBy', 5)\n        }\n    }\n}\n</script>"],"mappings":";gCACIA,mBAAA,CAAuB,YAAnB,gBAAc;gCAMlBA,mBAAA,CAAuB,gBAAf,QAAM;gCAEdA,mBAAA,CAAiB,YAAb,UAAQ;gCAEZA,mBAAA,CAAS;;;6DAVTC,UAAuB,EACvBD,mBAAA,CAAgD,YAA5C,iBAAe,GAAAE,gBAAA,CAAGC,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACC,KAAK,kBACxCN,mBAAA,CAAsC,YAAlC,YAAU,GAAAE,gBAAA,CAAGK,QAAA,CAAAC,aAAa,kBAE9BR,mBAAA,CAAsC;IAA7BS,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAK,SAAA,IAAAL,QAAA,CAAAK,SAAA,IAAAD,IAAA,CAAS;KAAE,IAAE,GAC7BX,mBAAA,CAAwC;IAA/BS,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAM,WAAA,IAAAN,QAAA,CAAAM,WAAA,IAAAF,IAAA,CAAW;KAAE,IAAE,GAC/BG,UAAuB,EAEvBC,UAAiB,EACjBf,mBAAA,CAA8B,YAA1B,YAAU,GAAAE,gBAAA,CAAGC,IAAA,CAAAG,KAAK,kBACtBU,UAAS,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}